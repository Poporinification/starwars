// Mocks generated by Mockito 5.4.2 from annotations
// in starwars/test/helpers/mock_runner_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:dio/dio.dart' as _i7;
import 'package:infinite_scroll_pagination/infinite_scroll_pagination.dart'
    as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:starwars/data/respositories/character_repository_impl.dart'
    as _i21;
import 'package:starwars/data/respositories/connectivity_repository_impl.dart'
    as _i24;
import 'package:starwars/data/respositories/http_repository_impl.dart' as _i22;
import 'package:starwars/data/respositories/storage_repository_impl.dart'
    as _i23;
import 'package:starwars/domain/entities/character.dart' as _i12;
import 'package:starwars/domain/entities/character_record.dart' as _i3;
import 'package:starwars/domain/entities/connetivity.dart' as _i5;
import 'package:starwars/domain/observable/connection_observable.dart' as _i20;
import 'package:starwars/domain/repositories/character_repository.dart' as _i2;
import 'package:starwars/domain/repositories/connectivity_repository.dart'
    as _i4;
import 'package:starwars/domain/repositories/http_repository.dart' as _i6;
import 'package:starwars/domain/repositories/storage_repository.dart' as _i8;
import 'package:starwars/domain/use_cases/append_characters_to_list_use_case.dart'
    as _i17;
import 'package:starwars/domain/use_cases/get_character_homeworld_use_case.dart'
    as _i14;
import 'package:starwars/domain/use_cases/get_character_starships_use_case.dart'
    as _i15;
import 'package:starwars/domain/use_cases/get_character_vehicles_use_case.dart'
    as _i13;
import 'package:starwars/domain/use_cases/get_characters_use_case.dart' as _i9;
import 'package:starwars/domain/use_cases/get_connectivity_status_use_case.dart'
    as _i16;
import 'package:starwars/domain/use_cases/report_character_use_case.dart'
    as _i11;
import 'package:starwars/domain/use_cases/toggle_connectivity_status_use_case.dart'
    as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCharacterRepository_0 extends _i1.SmartFake
    implements _i2.CharacterRepository {
  _FakeCharacterRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecordset_1 extends _i1.SmartFake implements _i3.Recordset {
  _FakeRecordset_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivityRepository_2 extends _i1.SmartFake
    implements _i4.ConnectivityRepository {
  _FakeConnectivityRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivity_3 extends _i1.SmartFake implements _i5.Connectivity {
  _FakeConnectivity_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHTTPRepository_4 extends _i1.SmartFake
    implements _i6.HTTPRepository {
  _FakeHTTPRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5<T> extends _i1.SmartFake implements _i7.Response<T> {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorageRepository_6 extends _i1.SmartFake
    implements _i8.StorageRepository {
  _FakeStorageRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetCharactersUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCharactersUseCase extends _i1.Mock
    implements _i9.GetCharactersUseCase {
  @override
  _i2.CharacterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.CharacterRepository);
  @override
  _i10.Future<_i3.Recordset> execute(int? page) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [page],
        ),
        returnValue: _i10.Future<_i3.Recordset>.value(_FakeRecordset_1(
          this,
          Invocation.method(
            #execute,
            [page],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.Recordset>.value(_FakeRecordset_1(
          this,
          Invocation.method(
            #execute,
            [page],
          ),
        )),
      ) as _i10.Future<_i3.Recordset>);
}

/// A class which mocks [ReportCharacterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportCharacterUseCase extends _i1.Mock
    implements _i11.ReportCharacterUseCase {
  @override
  _i2.CharacterRepository get characterRepository => (super.noSuchMethod(
        Invocation.getter(#characterRepository),
        returnValue: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#characterRepository),
        ),
        returnValueForMissingStub: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#characterRepository),
        ),
      ) as _i2.CharacterRepository);
  @override
  _i10.Future<void> execute(_i12.Character? character) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [character],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [GetCharacterVehiclesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCharacterVehiclesUseCase extends _i1.Mock
    implements _i13.GetCharacterVehiclesUseCase {
  @override
  _i2.CharacterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.CharacterRepository);
  @override
  _i10.Future<void> execute(_i12.Character? character) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [character],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [GetCharacterHomeWorldUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCharacterHomeWorldUseCase extends _i1.Mock
    implements _i14.GetCharacterHomeWorldUseCase {
  @override
  _i2.CharacterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.CharacterRepository);
  @override
  _i10.Future<void> execute(_i12.Character? character) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [character],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [GetCharacterStarshipsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCharacterStarshipsUseCase extends _i1.Mock
    implements _i15.GetCharacterStarshipsUseCase {
  @override
  _i2.CharacterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeCharacterRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.CharacterRepository);
  @override
  _i10.Future<void> execute(_i12.Character? character) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [character],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [GetConnectivityStatusUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetConnectivityStatusUseCase extends _i1.Mock
    implements _i16.GetConnectivityStatusUseCase {
  @override
  _i4.ConnectivityRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeConnectivityRepository_2(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeConnectivityRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.ConnectivityRepository);
  @override
  _i10.Future<_i5.Connectivity> execute() => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i10.Future<_i5.Connectivity>.value(_FakeConnectivity_3(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Connectivity>.value(_FakeConnectivity_3(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i10.Future<_i5.Connectivity>);
}

/// A class which mocks [AppendCharactersToListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppendCharactersToListUseCase extends _i1.Mock
    implements _i17.AppendCharactersToListUseCase {
  @override
  _i10.Future<void> execute(
    _i3.Recordset? recordset,
    _i18.PagingController<int, _i12.Character>? pagingController,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            recordset,
            pagingController,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [ToggleConnectivityStatusUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockToggleConnectivityStatusUseCase extends _i1.Mock
    implements _i19.ToggleConnectivityStatusUseCase {
  @override
  _i4.ConnectivityRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeConnectivityRepository_2(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeConnectivityRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.ConnectivityRepository);
  @override
  _i10.Future<void> execute({
    required bool? isConnected,
    required _i20.ConnectionObservable? connectionObservable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {
            #isConnected: isConnected,
            #connectionObservable: connectionObservable,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [CharacterRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRepositoryImpl extends _i1.Mock
    implements _i21.CharacterRepositoryImpl {
  @override
  _i6.HTTPRepository get httpRepository => (super.noSuchMethod(
        Invocation.getter(#httpRepository),
        returnValue: _FakeHTTPRepository_4(
          this,
          Invocation.getter(#httpRepository),
        ),
        returnValueForMissingStub: _FakeHTTPRepository_4(
          this,
          Invocation.getter(#httpRepository),
        ),
      ) as _i6.HTTPRepository);
  @override
  _i10.Future<_i3.Recordset> getCharacters(int? page) => (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [page],
        ),
        returnValue: _i10.Future<_i3.Recordset>.value(_FakeRecordset_1(
          this,
          Invocation.method(
            #getCharacters,
            [page],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.Recordset>.value(_FakeRecordset_1(
          this,
          Invocation.method(
            #getCharacters,
            [page],
          ),
        )),
      ) as _i10.Future<_i3.Recordset>);
  @override
  _i10.Future<String> getCharacterHomeWorld(_i12.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterHomeWorld,
          [character],
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<List<String>> getCharacterVehicles(_i12.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterVehicles,
          [character],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);
  @override
  _i10.Future<List<String>> getCharacterStarships(_i12.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterStarships,
          [character],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);
  @override
  _i10.Future<void> reportCharacter(_i12.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportCharacter,
          [character],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [HTTPRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHTTPRepositoryImpl extends _i1.Mock
    implements _i22.HTTPRepositoryImpl {
  @override
  _i10.Future<_i7.Response<dynamic>> get(
    String? path, {
    Map<String, dynamic>? queryParameters = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {#queryParameters: queryParameters},
        ),
        returnValue:
            _i10.Future<_i7.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {#queryParameters: queryParameters},
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i10.Future<_i7.Response<dynamic>>);
  @override
  _i10.Future<_i7.Response<dynamic>> post(
    String? path, {
    dynamic data,
    dynamic options,
    Map<String, dynamic>? queryParameters = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #options: options,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i10.Future<_i7.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #options: options,
              #queryParameters: queryParameters,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #options: options,
              #queryParameters: queryParameters,
            },
          ),
        )),
      ) as _i10.Future<_i7.Response<dynamic>>);
}

/// A class which mocks [StorageRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageRepositoryImpl extends _i1.Mock
    implements _i23.StorageRepositoryImpl {
  @override
  _i10.Future<bool> isExists({required String? boxName}) => (super.noSuchMethod(
        Invocation.method(
          #isExists,
          [],
          {#boxName: boxName},
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> addBoxes<T>(
    List<T>? items,
    String? boxName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBoxes,
          [
            items,
            boxName,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<T>> getBoxes<T>(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #getBoxes,
          [boxName],
        ),
        returnValue: _i10.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i10.Future<List<T>>.value(<T>[]),
      ) as _i10.Future<List<T>>);
  @override
  void putBox<T>(
    String? boxName,
    T? item, {
    int? index = 0,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #putBox,
          [
            boxName,
            item,
          ],
          {#index: index},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ConnectivityRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityRepositoryImpl extends _i1.Mock
    implements _i24.ConnectivityRepositoryImpl {
  @override
  _i8.StorageRepository get storageRepository => (super.noSuchMethod(
        Invocation.getter(#storageRepository),
        returnValue: _FakeStorageRepository_6(
          this,
          Invocation.getter(#storageRepository),
        ),
        returnValueForMissingStub: _FakeStorageRepository_6(
          this,
          Invocation.getter(#storageRepository),
        ),
      ) as _i8.StorageRepository);
  @override
  String get boxName => (super.noSuchMethod(
        Invocation.getter(#boxName),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i10.Future<_i5.Connectivity> getConnectivityStatus() => (super.noSuchMethod(
        Invocation.method(
          #getConnectivityStatus,
          [],
        ),
        returnValue: _i10.Future<_i5.Connectivity>.value(_FakeConnectivity_3(
          this,
          Invocation.method(
            #getConnectivityStatus,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Connectivity>.value(_FakeConnectivity_3(
          this,
          Invocation.method(
            #getConnectivityStatus,
            [],
          ),
        )),
      ) as _i10.Future<_i5.Connectivity>);
  @override
  _i10.Future<void> saveConnectivityStatus(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #saveConnectivityStatus,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> updateConnectivityStatus(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConnectivityStatus,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> hasStoredConnectivityStatus() => (super.noSuchMethod(
        Invocation.method(
          #hasStoredConnectivityStatus,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}
